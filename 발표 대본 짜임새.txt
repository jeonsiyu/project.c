< 발표 대본 짜임새>
구현기능 1 (메인화면)
다음으로 몇가지 구현 기능에 대해 설명하겠습니다.
귀여운 캐릭터와 눈에 뛰는 색감으로 메인화면을 구성하였습니다.
저희 프로그램 특성상 다양한 도트 작업이 필요하여 제목, 캐릭터의 얼굴표정 등을 함수로 따로 제작하여 필요시 불러서 사용할 수 있게 하였습니다.
여기서 <windows.h> 헤더 파일에 선언으로  색상을 입히거나, 좌표 함수를 통해 원하는 부분에 출력이 되도록 구현하였습니다. 
캡처화면에는 잘 보이지 않으나 좌표설정으로 인해 프로그램이 원하는 부분에서 출력된 것으로 볼 수 있습니다.

참고로 저희 프로그램에서는 gotoxy 함수를 쓸일이 많아 중독되는 것을 방지하고 여러파일에서 쓰기 위해 좌표에 관해서는 따로 헤더 파일을 선언하여 사용하였습니다.

// c언어는 헤더파일이 중복 선언이 안됨
-> 여러파일에 쓰기 위해 gotoxy 함수를 c파일로 만들어 놓고 함수를 선언하여 사용함
-> 여러군데에서 사용하지 못해서 = 똑같은 함수를 사용하면 중복사용되는 것으로 인식하여서


구현 기능 2 (사용자 정보 입력받기)

사용자의 정보를 입력 받을 수 있도록 이름, 성별, 몸무게 입력란을 만들었습니다.
(PPT에는 이름 출력만 보여줬음) 이름 입력란 코드를 보여드리면,
좌표에 따라 문구들이 출력되고 사용자가 해당되는 한개의 정보를 입력 하면 stsem("cls")를 사용하여 다음 출력에는 다음 정보만 출력되게 설정하였습니다.

저희는 예시로 "로우리"라는 이름에 성별은 여, 몸우게는 30Kg의 캐릭으로 입력하였습니다.
화면과 같이 입력받은 정보를 바탕으로 캐릭터에 사용자의 정보가 들어감으로써 캐릭터에 사용자가 몰입될 수 있도록 구성했습니다. 
입력 이후 캐릭터의 대화에서 마우스커서가 몰입에 방애요소가 될 것 같아 커서를 없애는 함수를 만들고 헤더파일을 선언하여 필요시 반복적으로 사용하였습니다. 

// getchar()가 들어간이유 - 
scanf()에서 문자열을 입력받은 후 엔터를 사용하여 입력을 완료하게 됩니다. 이때 엔터키를 누르면 개행문자("\n")가 버퍼(입력되면 입력값이 들어가는 공간)에 남아있게되며 이 개행문자가 제거되지 않으면 다음 호출될 입력 함수에세 개행문자를 입력값으로 인식하여 프로그램이 잘못된 동작을 할 수 있습니다. 이를 예방하기 위하여 입력된 개행문자를 버퍼에서 제거하기 위해 사용하였습니다.




구현 기능 3
좌표의 초기화 필요



구현 기능 4 (스킵기능)
프로그램을 다시 실행 할 경우에 정보입력 이후에 나오는 캐릭터와의 대화를 스킵 할 수 있는 기능이 필요 할 것 같아 추가한 기능 입니다.
waitforspacebar()라는 이름으로 스페이스바를 누르면 바로 다음 화면이 출력되는 함수입니다.
이 안에 사용된  GetTickCount();함수는 현재 시간 값을 가져오는 함수로 시간 값을 저장하기 위해서는 DWORD라는 자료형을 사용해야합니다.  그렇게 해서 현재 시간을 startTicks변수에 저장합니다.

// DWORD는 <windows.h>를 가져와야지만 쓸수 있음

무한 반복문을 사용 하여 스페이스바를 눌러서 스킵을 원할때 까지 반복 실행합니다.
반복문 안에 들어가 있는 _kbhit()함수는 무엇가가 입력이 되었는지를 확인하는 함수 입니다. 이 함수를 조건으로 하여 getch() 함수를 통해 입력된 값을 가져오고 입력이 값이 스페이스바라면 스킵이되는 구조입니다. 

만약 스킵을 원하지 않고 프로그램이 자동적으로 작동을 원할 경우에는 제한시간 3초로 지정이 되어있어 자동으로 다음 화면으로 넘어가는 구조입니다.

// GetTickCount(); 함수를 통해 가져온 값(현재시간 값)을 기준으로 전에 실행되었던 GetTickCount();값과 현재 실행되었던 
// GetTickCount();함수를 연산하여 그 값이 3초 이상일 때 자동으로 넘어가는 구조

//_kbhit() : 무엇가가 입력되었는지 확인하는 함수
//getch() : 입력된 값을 가져오는 함수


구현 기능 5 (식단 입력 및 저장된 데이터 불러오기)

구조체를 통해 데이터 입력 후 반복문을 사용

// 구조체 배열 : 음식의 이름, 양, 칼로리 라는 3가지 멤버들로 구조체를 선언하고 여러 음식 정보들을 저장하기 위하여 구조체 배열을 만들어 음식 데이터를 기록해두었다.

// printKcal()
// : 사용자가 입력한 음식 이름과 그램 수의 정보를 활용하여 구조체 배열에 저장된 음식 정보들 중 일치하는 음식의 칼로리를 
// 찾아서 출력한다. 음식이름이 일치하는 정보를 찾기 위해 #include <string.h> 를 선언하여 strcmp(스트링 캄페어)() 함수를 
// 사용했습니다. strcmp() 는 문자열 비교하는 함수이며 문자열이 같으면 0을 반환하기 때문에 반환값이 0과 일치한다면이라는 // 조건식을 사용하고, 입력받은 그램 수와 저장된 정보까지 일치했을 때의 kcal 값을 출력하는 화면입니다.

// sizeof(FoodList) : 푸드 리스트안에 값들을 세어 불러오는 함수 (전체 갯수) 
// sizeof(FoodList) / sizeof(FoodList[0]) -> 배열의 전체 크기를 배열의 첫번째 요소의 크기로 나눈값이므로 배열의 요소 수가 된다. 
// 배열의 시작은 0부터임 -> 사실상 [20]이면 0~19이므로 1~20값으로 만들기 위해서 나누기를 한다
// = 리스트 수가 되지 전까지 반복하는 반복문의 조건식임

// 중첩 반목문은 밖에 반복이 실행될 때
//  ex) 1일때 안에 반복문 전체 값(20) 만큼 돈다 ......... 20일 때 안에 반복문 전체 값(20) 만큼 '또' 돈다.

구현기능 6 (누적 칼로리 그래프 출력)


// KcalGraph() 
// : 하루 적정칼로리에 비례한 누적된 칼로리를 한눈에 볼 수 있도록 그래프로 출력된다.
// 프로그램 초반에 입력받은 사용자의 이름과 함께  메세지를 출력한다. 메세지는 아침, 점심, 저녁의 시간에 따라 다른 메세지
// 가 출력된다.

-정희언니가 말해달랫음
-> "캐릭터의 메세지가 출력이되는데 시간대 별로 적정한 메세지가 출력되도록 구성되어있습니다."
 